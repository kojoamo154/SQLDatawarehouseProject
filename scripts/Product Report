/*
=====================================================================
Product Report
=====================================================================
Purpose:
	-This report consolidates key product metrics and behaviours

Highlights:
	1. Gathers essential fields such as product name, category, subcategory and cost.
	2. Segments products by revenue to identify High-Performers, Mid-Range or Low-Performers.
	3. Aggregates product-level metrics:
		- total orders
		- total sales
		- total quantity sold
		- total customers (unique)
		- lifespan (in months)
	4. Calculate valuable KPIs:
		- recency (months since last sale)
		- average order revenue
		- average monthly revenue
	=================================================================*/

------------------------------------------------------------------
-- 1) Base Query: Retrieves core columns from tables
------------------------------------------------------------------
CREATE VIEW gold.report_products AS
WITH base_query AS (
	SELECT
		f.product_number AS product_key,
		p.product_number,
		p.product_name,
		p.category,
		p.subcategory,
		f.customer_number,
		p.cost,
		f.order_date,
		f.order_number,
		f.price,
		f.sales_amount,
		f.quantity
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_products p
	ON f.product_number = p.product_key
	WHERE order_date IS NOT NULL
	),
-------------------------------------------------------------------------
-- 2) Customer Aggregations: Summarizes key metrics at the customer level
-------------------------------------------------------------------------
agg_cte AS(
	SELECT
		product_key,
		product_name,
		category,
		subcategory,
		COUNT(DISTINCT order_number) AS orders,	
		COUNT(DISTINCT customer_number) AS customers,
		SUM(sales_amount) AS revenue,
		SUM(quantity) AS quantity_sold,
		MAX(order_date) AS last_order,
		DATEDIFF(month, MIN(order_date), MAX(order_date)) AS lifespan
	FROM base_query
	GROUP BY
		product_key,
		product_name,
		category,
		subcategory
	)
-------------------------------------------------------------------------
-- 2) Combining to Get final table
-------------------------------------------------------------------------
	SELECT
		product_key,
		product_name,
		category,
		subcategory,
		orders,	
		customers,
		revenue,
		quantity_sold,
		DATEDIFF(MONTH, last_order, GETDATE()) AS recency,
		-- Compute Average Order Revenue
		CASE WHEN orders = 0 THEN '0'
			 ELSE revenue / orders
		END AS avg_order_revenue,
		-- Compute Average Monthly Revenue
		CASE WHEN lifespan = 0 THEN '0'
			 ELSE revenue / lifespan
		END AS avg_monthly_revenue,
		CASE WHEN revenue > 50000 THEN 'High Performer'
			 WHEN revenue >=10000 THEN 'Mid-Range'
			 ELSE 'Low Performer'
		END AS product_segment
	FROM agg_cte
